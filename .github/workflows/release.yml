# Template used https://superface.ai/blog/npm-publish-gh-actions-changelog
name: Release

on:
  workflow_dispatch:
    # Inputs the workflow accepts. See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#onworkflow_dispatchinputs
    inputs:
      releaseType:
        description: 'Choose release type'
        default: 'patch'
        required: true
        type: choice
        options:
          - major
          - minor
          - patch

permissions:
  contents: write
  pull-requests: write

env:
  NODE_VERSION: '20.x'
  NPM_LOCK_LOCATION: 'frontend/package-lock.json'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      NEW_VERSION: ${{ steps.releaseVersionUpdate.outputs.NEW_VERSION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Git configuration
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions on behalf of @${{ github.triggering_actor }}"
      - name: Bump Release Version
        id: releaseVersionUpdate
        run: |
            cd frontend
            echo "NEW_VERSION=$(npm version ${{ inputs.releaseType }})" >> $GITHUB_OUTPUT
      - name: Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            cd frontend
            git tag ${{ steps.releaseVersionUpdate.outputs.NEW_VERSION }}
            git add package.json package-lock.json
            git commit -m "ðŸ”– release: Bump version to ${{ steps.releaseVersionUpdate.outputs.NEW_VERSION }}"
            git push origin ${{ steps.releaseVersionUpdate.outputs.NEW_VERSION }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.releaseVersionUpdate.outputs.NEW_VERSION }}
          generate_release_notes: true

  deploy:
    needs: [ release ]
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.NPM_LOCK_LOCATION }}
      - name: Install Packages
        run: |
            cd frontend
            npm ci
      - name: Build Library
        env:
          VITE_IMPRINT_EMAIL: ${{ secrets.VITE_IMPRINT_EMAIL }}
          VITE_IMPRINT_NAME: ${{ secrets.VITE_IMPRINT_NAME }}
          VITE_IMPRINT_STREET: ${{ secrets.VITE_IMPRINT_STREET }}
          VITE_IMPRINT_POSTAL_CODE: ${{ secrets.VITE_IMPRINT_POSTAL_CODE }}
          VITE_IMPRINT_CITY: ${{ secrets.VITE_IMPRINT_CITY }}
        run: |
          cd frontend
          npm run build
      - uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: ./frontend/dist
          clean-exclude: pr-preview/
          force: false